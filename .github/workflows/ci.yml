name: CI

on:
  push:
  release:
    types: [published]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install
        env:
          GITHUB_NPM_TOKEN: ${{ secrets.LEON_GITHUB_NPM_PAT }}
        run: |
          npm config set //npm.pkg.github.com/:_authToken=$GITHUB_NPM_TOKEN
          yarn install

      - name: Lint
        run: |
          yarn lint

      - name: Update can-i-use
        run: |
          npx browserslist --update-db

      - name: Build
        run: |
          yarn build

      - name: Generate version
        id: version
        run: |
          VERSION=$(tools/gitversion)
          echo $VERSION
          echo $VERSION > VERSION
          echo VERSION=$VERSION >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Prepare artifact
        run: |
          tar c -zf build_$VERSION.tgz -C build/ .

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          retention-days: 2
          if-no-files-found: error
          path: |
            build_${{ steps.version.outputs.version }}.tgz
            VERSION

  upload:
    runs-on: ubuntu-latest
    needs: [ ci ]
    if: |
      github.event_name == 'release' ||
      github.event_name == 'push' && github.ref_name == 'master' ||
      github.event_name == 'push' && startsWith(github.ref_name, 'release-v')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: Set up env
        run: |
          # Just for debugging and better understanding list all files we have now.
          find .
          VERSION=$(cat VERSION)
          ARTIFACT=build/build_$VERSION.tgz
          echo BUILD_VERSION=$VERSION >> $GITHUB_ENV
          echo ARTIFACT=$ARTIFACT >> $GITHUB_ENV

      - name: Authenticate to google cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.INFRASTRUCTURE_SERVICE_ACCOUNT_JSON_KEY }}
          service_account: github-action@infrastructure-220307.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: infrastructure-220307

      - name: Upload to gcloud
        run: |
          echo -n $BUILD_VERSION > LATEST.tmp

          gsutil cp $ARTIFACT  gs://toit-web/pkg.toit.io/$BUILD_VERSION.tgz
          gsutil cp LATEST.tmp gs://toit-web/pkg.toit.io/LATEST

      - name: Update RELEASE in gcloud
        if: |
          github.event_name == 'release' && !github.event.release.prerelease
        run: |
          echo -n $BUILD_VERSION > LATEST.tmp

          gsutil cp LATEST.tmp gs://toit-web/pkg.toit.io/RELEASED
          gsutil cp LATEST.tmp gs://toit-web/pkg.toit.io/RELEASED.$TOIT_VERSION
